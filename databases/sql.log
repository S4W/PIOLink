timestamp: 2017-10-10T12:23:26.623000
CREATE TABLE usuario(
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(128),
    last_name VARCHAR(128),
    email VARCHAR(512),
    username VARCHAR(128),
    password VARCHAR(512),
    registration_key VARCHAR(512),
    reset_password_key VARCHAR(512),
    registration_id VARCHAR(512)
);
success!
timestamp: 2017-10-10T12:23:26.712000
CREATE TABLE auth_group(
    id SERIAL PRIMARY KEY,
    role VARCHAR(512),
    description TEXT
);
success!
timestamp: 2017-10-10T12:23:26.837000
CREATE TABLE auth_membership(
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES usuario (id) ON DELETE CASCADE  ,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE  
);
success!
timestamp: 2017-10-10T12:23:26.884000
CREATE TABLE auth_permission(
    id SERIAL PRIMARY KEY,
    group_id INTEGER REFERENCES auth_group (id) ON DELETE CASCADE  ,
    name VARCHAR(512),
    table_name VARCHAR(512),
    record_id INTEGER
);
success!
timestamp: 2017-10-10T12:23:26.955000
CREATE TABLE auth_event(
    id SERIAL PRIMARY KEY,
    time_stamp TIMESTAMP,
    client_ip VARCHAR(512),
    user_id INTEGER REFERENCES usuario (id) ON DELETE CASCADE  ,
    origin VARCHAR(512),
    description TEXT
);
success!
timestamp: 2017-10-10T12:23:27.039000
CREATE TABLE auth_cas(
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES usuario (id) ON DELETE CASCADE  ,
    created_on TIMESTAMP,
    service VARCHAR(512),
    ticket VARCHAR(512),
    renew CHAR(1)
);
success!
timestamp: 2017-10-10T12:23:27.125000
CREATE TABLE liceo(
    id SERIAL PRIMARY KEY,
    nombre VARCHAR(512) NOT NULL,
    tipo VARCHAR(512) NOT NULL
);
success!
timestamp: 2017-10-10T12:23:27.213000
CREATE TABLE estudiante(
    id SERIAL PRIMARY KEY,
    ci VARCHAR(8) NOT NULL UNIQUE,
    promedio INTEGER NOT NULL,
    direccion VARCHAR(512),
    fecha_nacimiento DATE,
    sexo VARCHAR(1),
    estatus VARCHAR(512),
    cohorte VARCHAR(512),
    ci_representante VARCHAR(8),
    nombre_representante VARCHAR(512),
    apellido_representante VARCHAR(512),
    correo_representante VARCHAR(128),
    direccion_representante VARCHAR(512),
    id_liceo INTEGER REFERENCES liceo (id) ON DELETE CASCADE  
);
success!
timestamp: 2017-10-10T12:23:27.331000
CREATE TABLE profesor(
    id SERIAL PRIMARY KEY,
    ci VARCHAR(8) NOT NULL UNIQUE
);
success!
timestamp: 2017-10-10T12:23:27.442000
CREATE TABLE representante_sede(
    id SERIAL PRIMARY KEY,
    ci VARCHAR(8) NOT NULL UNIQUE,
    sede VARCHAR(512)
);
success!
timestamp: 2017-10-10T12:23:27.600000
CREATE TABLE representante_liceo(
    id SERIAL PRIMARY KEY,
    ci VARCHAR(8) NOT NULL UNIQUE,
    id_liceo INTEGER REFERENCES liceo (id) ON DELETE CASCADE  
);
success!
timestamp: 2017-10-10T12:23:27.671000
CREATE TABLE materia(
    id SERIAL PRIMARY KEY,
    nombre VARCHAR(512) NOT NULL,
    ci_profesor VARCHAR(512)
);
success!
timestamp: 2017-10-10T12:23:27.776000
CREATE TABLE cursa(
    id SERIAL PRIMARY KEY,
    ci_estudiante VARCHAR(512),
    id_materia INTEGER REFERENCES materia (id) ON DELETE CASCADE  ,
    notas TEXT
);
success!
timestamp: 2017-10-10T12:23:27.853000
CREATE TABLE asistencia(
    id SERIAL PRIMARY KEY,
    ci_estudiante VARCHAR(512),
    id_materia INTEGER REFERENCES materia (id) ON DELETE CASCADE  ,
    fecha_clase DATE
);
success!
timestamp: 2017-10-10T12:23:27.957000
CREATE TABLE carrera(
    id SERIAL PRIMARY KEY,
    nombre VARCHAR(512)
);
success!
timestamp: 2017-10-10T12:23:28.037000
CREATE TABLE exime(
    id SERIAL PRIMARY KEY,
    ci_estudiante VARCHAR(8) NOT NULL,
    ci_representante_liceo VARCHAR(8) NOT NULL,
    cohorte VARCHAR(512) NOT NULL
);
success!
timestamp: 2017-10-10T12:23:28.111000
CREATE TABLE periodos(
    id SERIAL PRIMARY KEY,
    nombre VARCHAR(512),
    fecha_inicio DATE,
    fecha_fin DATE
);
success!
