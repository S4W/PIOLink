(dp1
S'output'
p2
S'<class \'psycopg2.ProgrammingError\'> relation "sede" does not exist\nLINE 1: SELECT  sede.zona FROM sede WHERE (sede.id IS NOT NULL) ORDE...\n                               ^\n'
p3
sS'layer'
p4
S'C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py\\applications\\SisPIO\\controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n# -------------------------------------------------------------------------\n# This is a sample controller\n# - index is the default action of any application\n# - user is required for authentication and authorization\n# - download is for downloading files uploaded in the db (does streaming)\n# -------------------------------------------------------------------------\nimport os\nimport re\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/bulk_register\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    also notice there is http://..../[app]/appadmin/manage/auth to allow administrator to manage users\n    """\n    if not(request.args):\n        if auth.is_logged_in():\n            redirect(URL(\'redireccionando\'))\n        else:\n            redirect(URL(\'index\'))\n    else:\n        if request.args[0] == \'login\':\n            if auth.is_logged_in():\n                redirect(URL(\'redireccionando\'))\n            else:\n                redirect(URL(\'index\'))\n    return dict(form=auth())\n\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n@auth.requires_login()\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\ndef index():\n    if auth.is_logged_in():\n        redirect(URL(\'default\', \'user\', args=\'logout\')) # Si ya hay un usuario conectado, desconectarlo\n    return dict(form=auth.login())\n\ndef redireccionando():\n    if auth.is_logged_in():\n        if \'Administrador\' in auth.user_groups.values():\n            redirect(URL(\'admin\'))\n        elif \'Estudiante\' in auth.user_groups.values():\n            redirect(URL(\'welcome\'))\n        elif \'Profesor\' in auth.user_groups.values():\n            redirect(URL(\'profesor\'))\n        elif \'Representante_liceo\' in auth.user_groups.values():\n            redirect(URL(\'coordinadorLiceo\'))\n        elif \'Representante_sede\' in auth.user_groups.values():\n            redirect(URL(\'coordinadorPio\'))\n        else:\n            redirect(URL(\'default\', \'user\', args=\'logout\'))\n    else:\n        redirect(URL(\'index\'))\n    return dict()\n\n@auth.requires_membership(\'Administrador\')\n@auth.requires_login()\ndef admin():\n    ##################\n    # Carga de archivo\n    ##################\n    erroresCarga = [] # Los errores en la carga van aqui\n    cargaExitosa = [] # Los usuarios agregados exitosamente van aqui\n    cohorte = db(db.cohorte.activo==True).select()[0].identificador # Cohorte Actual\n    formularioArchivo = FORM(\n                            INPUT(_name=\'tituloArchivo\', _type=\'text\'),\n                            INPUT(_name=\'archivo\', _type=\'file\')\n                            )\n    if formularioArchivo.accepts(request.vars,formname=\'formularioArchivo\'): # Chequeamos si hay un archivo cargado\n        archivo =request.vars.fileToUpload.filename.split(".")  # Separamos el nombre del archivo de la extension\n        nombreArchivo, extension = archivo[0], archivo[1]\n        if extension == "csv":          # Chequeamos la extension del archivo\n            response.flash = \'Procesado archivo exitosamente\'\n            ######################\n            # Cargando Estudiantes\n            ######################\n            if request.vars.optradio == "estudiante":   # Chequeamos el tipo de usuario a agregar\n                f = request.vars.fileToUpload.file      # Archivo cargado\n                texto = f.read().splitlines()           # Leer el archivo\n                cabecera = texto[0].split(";")          # Extraemos la cabecera\n                liceo = texto[1].split(";")             # Extraemos la linea que contiene el nombre del liceo\n                texto.remove(texto[1])                  # Eliminamos del texto la linea del liceo para no iterar sobre ella\n                texto.remove(texto[0])                  # Eliminamos del texto la cabecera para no iterar sobre ella\n                if ((cabecera[0]=="C.I." and cabecera[1]==\'Nombres\' and\n                cabecera[2]==\'Apellidos\' and cabecera[3]==\'Promedio (00.00)\') and\n                (liceo[0] == "Nombre del Liceo:") and liceo[1] == "" and liceo[2] != ""): # Verificamos que la cabecera y la linea del liceo tenga el formato correcto\n                    liceo = liceo[2]                    # Seleccionamos el nombre del liceo\n                    datos = []                          # Los usuarios a agregar van aqui\n                    for i in texto:\n                        if i != ";;;;":\n                            dato = i.split(";")         # Separamos los datos del usuario\n                            datos.append(dato)          # Agregamos el usuario a la lista de usuarios por agregar\n\n                    for i in datos:\n                        if (not(db(db.usuario.username == i[0]).select()) and\n                           not(db(db.estudiante.ci == i[0]).select())):         # Verificar que no existe un usuario para esa cedula\n                            if 0 <= float(i[3]) <= 20:                          # Verificamos que el indice sea correcto\n                                if db(db.liceo.nombre == liceo).select():       # Verificamos que el liceo este en la base de datos\n                                    if re.match(\'^[0-9]{1,8}$\', i[0]):          # Verificamos que la cedula cumpla la expresion regular\n                                        id = db.usuario.insert(first_name = i[1],last_name = i[2], email = "", username = i[0],\n                                                      password = db.usuario.password.validate(i[0])[0], registration_key = "",\n                                                      reset_password_key = "", registration_id = "" )       # Agregar el usuario\n                                        db.auth_membership.insert(user_id = id, group_id= 1)                # Agregar permisos de estudiante (group_id=1)\n                                        db.estudiante.insert(Nombre=i[1], Apellido=i[2], ci=i[0], promedio=float(i[3]), direccion="", telefono_habitacion="",\n                                                        telefono_otro="", fecha_nacimiento="", sexo="", estatus="Pre-inscrito",\n                                                        cohorte=cohorte, ci_representante="", nombre_representante="",\n                                                        apellido_representante="", sexo_representante="", correo_representante="",\n                                                        direccion_representante="", nombre_liceo=liceo, telefono_representante_oficina="",\n                                                        telefono_representante_otro="", sufre_enfermedad="", enfermedad="",\n                                                        indicaciones_enfermedad="")     # Agregamos el estudiante Cohorte deberia ser una variable global\n                                        cargaExitosa.append(i)                          # Agregarlo a los estudiantes cargados exitosamente\n                                    else:\n                                        erroresCarga.append([i,"Cedula incorrecta"])                                            # Error de Carga\n                                else:\n                                    erroresCarga.append([i,"Su liceo no esta en la base de datos. Contacte al administrador"])  # Error de Carga\n                            else:\n                                erroresCarga.append([i,"El promedio debe ser un numero entre 0 y 20"])                          # Error de Carga\n                        else:\n                            erroresCarga.append([i,"Ya existe un usuario en el sistema con esta cedula"])                       # Error de Carga\n\n                else:\n                    response.flash = "Formato de los datos del archivo invalido. Consulte el manual"                            # Error de Carga\n            #################################\n            # Cargando Representantes de sede\n            #################################\n            elif request.vars.optradio == "sede":\n                f = request.vars.fileToUpload.file      # Archivo cargado\n                texto = f.read().splitlines()           # Leer el archivo\n                cabecera = texto[0].split(";")          # Extraemos la cabecera\n                texto.remove(texto[0])                  # Eliminamos del texto la cabecera para no iterar sobre ella\n                if (cabecera[0]=="C.I." and cabecera[1]==\'Nombres\' and\n                    cabecera[2]==\'Apellidos\' and cabecera[3]==\'Sede\'): # Verificamos que la cabecera tenga el formato correcto\n                    datos = []                          # Los usuarios a agregar van aqui\n                    for i in texto:\n                        if i != ";;;;":\n                            dato = i.split(";")         # Separamos los datos del usuario\n                            datos.append(dato)          # Agregamos el usuario a la lista de usuarios por agregar\n\n                    for i in datos:\n                        if (not(db(db.usuario.username == i[0]).select()) and\n                            not(db(db.representante_sede.ci == i[0]).select())):    # Verificar que no existe un usuario para esa cedula\n                            if db(db.sede.zona == i[3]).select():                # Verificamos que la sede este en la base de datos\n                                if re.match(\'^[0-9]{1,8}$\', i[0]):                      # Verificamos que la cedula cumpla la expresion regular\n                                    id = db.usuario.insert(first_name = i[1],last_name = i[2], email = "", username = i[0],\n                                                  password = db.usuario.password.validate(i[0])[0], registration_key = "",\n                                                  reset_password_key = "", registration_id = "" ) # Agregar el usuario\n                                    db.auth_membership.insert(user_id = id, group_id=4) # Agregar permisos de representante sede (group_id=4)\n                                    db.representante_sede.insert(Nombre=i[1], Apellido=i[2], ci=i[0], sede=i[3]) # Agregar el representante de sede\n                                    cargaExitosa.append(i) # Agregarlo a los usuarios cargados exitosamente\n                                else:\n                                    erroresCarga.append([i,"Cedula incorrecta"])                                                # Error de Carga\n                            else:\n                                erroresCarga.append([i,"Su sede no esta en la base de datos. Contacte al administrador"])  # Error de Carga\n                        else:\n                            erroresCarga.append([i,"Ya existe un usuario en el sistema con esta cedula"])                   # Error de Carga\n                else: #Error\n                    response.flash = "Formato de los datos del archivo invalido. Consulte el manual"                       # Error de Carga\n            ##################################\n            # Cargando Representante de liceos\n            ##################################\n            elif request.vars.optradio == "liceo":\n                f = request.vars.fileToUpload.file      # Archivo cargado\n                texto = f.read().splitlines()           # Leer el archivo\n                cabecera = texto[0].split(";")          # Extraemos la cabecera\n                texto.remove(texto[0])                  # Eliminamos del texto la cabecera para no iterar sobre ella\n                if (cabecera[0]=="C.I." and cabecera[1]==\'Nombres\' and\n                cabecera[2]==\'Apellidos\' and cabecera[3]==\'Liceo\'): # Verificamos que la cabecera tenga el formato correcto\n                    datos = []                          # Los usuarios a agregar van aqui\n                    for i in texto:\n                        if i != ";;;;":\n                            dato = i.split(";")         # Separamos los datos del usuario\n                            datos.append(dato)          # Agregamos el usuario a la lista de usuarios por agregar\n\n                    for i in datos:\n                        if (not(db(db.usuario.username == i[0]).select()) and\n                            not(db(db.representante_liceo.ci == i[0]).select())):    # Verificar que no existe un usuario para esa cedula\n                            if db(db.liceo.nombre == i[3]).select():                # Verificamos que el liceo este en la base de datos\n                                if re.match(\'^[0-9]{1,8}$\', i[0]):      # Verificamos que la cedula cumpla la expresion regular\n                                    id = db.usuario.insert(first_name = i[1],last_name = i[2], email = "", username = i[0],\n                                                  password = db.usuario.password.validate(i[0])[0], registration_key = "",\n                                                  reset_password_key = "", registration_id = "" ) # Agregar el usuario\n                                    db.auth_membership.insert(user_id = id, group_id=3) # Agregar permisos de representante liceo (group_id=3)\n                                    db.representante_liceo.insert(Nombre=i[1], Apellido=i[2], ci=i[0], nombre_liceo=i[3]) # Agregar el representante de liceo\n                                    cargaExitosa.append(i) # Agregarlo a los usuarios cargados exitosamente\n                                else:\n                                    erroresCarga.append([i,"Cedula incorrecta"])                                            # Error de Carga\n                            else:\n                                erroresCarga.append([i,"Su liceo no esta en la base de datos. Contacte al administrador"])  # Error de Carga\n                        else:\n                            erroresCarga.append([i,"Ya existe un usuario en el sistema con esta cedula"])                   # Error de Carga\n                else: #Error\n                    response.flash= "Formato de los datos del archivo invalido. Consulte el manual"                          # Error de Carga\n            #####################\n            # Cargando Profesores\n            #####################\n            elif request.vars.optradio == "profesor":\n                f = request.vars.fileToUpload.file      # Archivo cargado\n                texto = f.read().splitlines()           # Leer el archivo\n                cabecera = texto[0].split(";")          # Extraemos la cabecera\n                chequeo = texto[1].split(";")             # Extraemos la linea que contiene el nombre del liceo\n                texto.remove(texto[1])                  # Eliminamos del texto la linea del liceo para no iterar sobre ella\n                texto.remove(texto[0])\n                if (cabecera[0]=="C.I." and cabecera[1]==\'Nombres\' and\n                    cabecera[2]==\'Apellidos\' and cabecera[3]==\'Materia\' and\n                    chequeo[0] == "A continuacion ingrese los profesores" and\n                    chequeo[1] == "" and chequeo[2] == ""):\n\n                    datos = []                          # Los usuarios a agregar van aqui\n                    for i in texto:\n                        if i != ";;;;":\n                            dato = i.split(";")         # Separamos los datos del usuario\n                            datos.append(dato)\n\n                    for i in datos:\n                        if (not(db(db.usuario.username == i[0]).select()) and\n                            not(db(db.profesor.ci == i[0]).select())):    # Verificar que no existe un usuario para esa cedula\n                            if re.match(\'^[0-9]{1,8}$\', i[0]):      # Verificamos que la cedula cumpla la expresion regular\n                                id = db.usuario.insert(first_name = i[1],last_name = i[2], email = "", username = i[0],\n                                              password = db.usuario.password.validate(i[0])[0], registration_key = "",\n                                              reset_password_key = "", registration_id = "" ) # Agregar el usuario\n                                db.auth_membership.insert(user_id = id, group_id=2) # Agregar permisos de profesor(group_id=2)\n                                db.profesor.insert(Nombre=i[1], Apellido=i[2], ci=i[0]) # Agregar el profesor FALTA LA MATERIA EN LA BD\n                                cargaExitosa.append(i) # Agregarlo a los usuarios cargados exitosamente\n                            else:\n                                erroresCarga.append([i,"Cedula incorrecta"])                                            # Error de Carga\n                        else:\n                            erroresCarga.append([i,"Ya existe un usuario en el sistema con esta cedula"])                   # Error de Carga\n                else: #Error\n                    response.flash= "Formato de los datos del archivo invalido. Consulte el manual"\n            #####################\n            # Cargando Liceos\n            #####################\n            elif request.vars.optradio == "liceos":\n                f = request.vars.fileToUpload.file      # Archivo cargado\n                texto = f.read().splitlines()           # Leer el archivo\n                cabecera = texto[0].split(";")          # Extraemos la cabecera\n                texto.remove(texto[0])                  # Eliminamos del texto la cabecera para no iterar sobre ella\n                if (cabecera[0]=="Nombre del Liceo" and cabecera[2]==\'Tipo del Liceo\' and\n                cabecera[4]==\'Sede\'):                   # Verificamos que la cabecera tenga el formato correcto\n                    datos = []                          # Los liceos a agregar van aqui\n                    for i in texto:\n                        if i != ";;;;":\n                            dato = i.split(";")         # Separamos los datos del usuario\n                            datos.append(dato)          # Agregamos el usuario a la lista de usuarios por agregar\n\n                    for i in datos:\n                        if not(db(db.liceo.nombre == i[0]).select()):               # Verificar que no existe un liceo con ese nombre\n                            db.liceo.insert(nombre = i[0], tipo = i[2], sede = i[4]) # Agregar el liceos\n                            cargaExitosa.append(i) # Agregarlo a los liceos cargados exitosamente\n                        else:\n                            erroresCarga.append([i,"Ya existe un liceo en el sistema con ese nombre"])                      # Error de Carga\n                else: #Error\n                    erroresCarga.append("Formato de los datos del archivo invalido. Consulte el manual")                    # Error de Carga\n        else: #Error\n            response.flash = "El formato del archivo debe ser \\".csv\\". Consulte el manual de usuario"\n    else:\n        pass\n\n    ######################\n    # Fin Carga de Archivo\n    ######################\n\n    ###############\n    # Eliminar\n    ###############\n    eliminando =  None\n    tipoUserEliminando = "none"\n    formularioEliminar = FORM()\n    if formularioEliminar.accepts(request.vars,formname=\'formularioEliminar\'): # Chequeamos si hay una cedula para revisar\n        if db(db.usuario.username==request.vars.ci).select():       # chequeamos si existe un usuario con la cedula introducidad\n            user = request.vars.ci                                  # Guardamos la cedula para usarla mas tarde\n            session.eliminar = user                                 # Guardamos la cedula para usarla en el siguiente formulario\n            eliminando = db(db.usuario.username==user).select()     # Seleccionamos el usuario a eliminar\n            tipoUserEliminando = db(db.auth_membership.user_id==eliminando[0].id).select()[0].group_id # Numero del grupo al que pertenece el user a eliminar\n            tipoUserEliminando = db(db.auth_group.id==tipoUserEliminando).select()[0].role              # Buscamos el nombre correspondiente al grupo\n        else:\n            eliminando = "No hay un usuario con esa cedula"\n\n    # Si se confirma la eliminacion\n    confirmacionEliminar = FORM()\n    if confirmacionEliminar.accepts(request.vars,formname=\'confirmacionEliminar\'): # Chequeamos si hay una cedula para revisar\n        db(db.usuario.username==session.eliminar).delete()          # Eliminamos el usuario\n        db(db.estudiante.ci==session.eliminar).delete()             # Eliminamos el estudiante\n        db(db.representante_sede.ci==session.eliminar).delete()     # Eliminamos el representante de sede\n        db(db.representante_liceo.ci==session.eliminar).delete()    # Eliminamos el representante de liceo\n        session.eliminar = None                                     # Destruimos la variable para evitar bugs\n        response.flash = "Eliminado exitosamente"\n    ################\n    # Fin Eliminar\n    ################\n\n    #############\n    # Modificar\n    ############\n    modificando = None\n    formularioModificar = None\n    cedulaModificar = FORM()\n    if cedulaModificar.accepts(request.vars,formname="cedulaModificar"):    # Verificamos que se haya introducido una cedula\n        if db(db.estudiante.ci==request.vars.ci).select():\n            session.tipo = "Estudiante"\n            session.cedula = request.vars.ci\n        elif db(db.representante_sede.ci==request.vars.ci).select():\n            session.tipo = "Representante de sede"\n            session.cedula = request.vars.ci\n        elif db(db.representante_liceo.ci==request.vars.ci).select():\n            session.tipo = "Representante de liceo"\n            session.cedula = request.vars.ci\n        else:\n            response.flash = \'No hay un usuario para esta cedula\'\n\n    if session.tipo:\n        if session.tipo == "Estudiante":\n            if db(db.estudiante.ci==session.cedula).select():\n                modificando = [session.tipo, db(db.estudiante.ci==session.cedula).select()]\n                formularioModificar = SQLFORM(db.estudiante, modificando[1][0],showid=False)\n        elif session.tipo == "Representante de sede":\n            if db(db.representante_sede.ci==session.cedula).select():\n                modificando = [session.tipo, db(db.representante_sede.ci==session.cedula).select()]\n                formularioModificar = SQLFORM(db.representante_sede, modificando[1][0],showid=False)\n        elif session.tipo == "Representante de liceo":\n            if db(db.representante_liceo.ci==session.cedula).select():\n                modificando = [session.tipo, db(db.representante_liceo.ci==session.cedula).select()]\n                formularioModificar = SQLFORM(db.representante_liceo, modificando[1][0],showid=False)\n\n        if formularioModificar:\n            if formularioModificar.accepts(request.vars,formname=\'formularioModificar\'):            # Procesamos el formulario\n                response.flash = \'Modificado exitosamente\'\n                db(db.usuario.username==session.cedula).update(email=request.vars.correo)           # Se cambia el correo de ser necesario\n                db(db.usuario.username==session.cedula).update(username=request.vars.ci)            # Se cambia el username si se cambia la cedula\n                db(db.usuario.username==session.cedula).update(first_name=request.vars.Nombre)\n                db(db.usuario.username==session.cedula).update(last_name=request.vars.Apellido)\n                session.tipo = None\n                formularioModificar = None\n                modificando = None\n            elif formularioModificar.errors:\n                response.flash = \'Hay errores en el formulario\'\n\n    ##################\n    # Fin de modificar\n    ##################\n\n    #################\n    # Agregar Manualmente Estudiante\n    #################\n\n\n    formularioAgregarManual = FORM()\n    cohorte = db(db.cohorte.activo==True).select()[0].identificador # Cohorte Actual\n\n    #SI ha pasado correctamente el formulario\n    if formularioAgregarManual.accepts(request.vars,formname="formularioAgregarManual"):\n        if request.vars.tipoUsuario == "estudiante":\n            if (not(db(db.usuario.username == request.vars.cedula).select()) and not(db(db.estudiante.ci == request.vars.cedula).select())):\n                if 0 <= int(request.vars.PromedioEntero) + float(request.vars.PromedioDecimal)/100 <= 20:\n                    if db(db.liceo.nombre == request.vars.liceo).select():\n                        if re.match(\'^[0-9]{1,8}$\', request.vars.cedula):\n                            usuario_nuevo = db.usuario.insert(\n                                            username=request.vars.cedula,\n                                            first_name=request.vars.nombres,\n                                            last_name=request.vars.apellidos,\n                                            email="",\n                                            password=db.usuario.password.validate(request.vars.cedula)[0],\n                                            registration_key = "",\n                                            reset_password_key = "",\n                                            registration_id = ""\n                            )\n                            db.auth_membership.insert(user_id = usuario_nuevo, group_id= 1) # Agregar permisos de estudiante\n\n                            db.estudiante.insert(\n                                            Nombre=request.vars.nombres,\n                                            Apellido=request.vars.apellidos,\n                                            ci=request.vars.cedula,\n                                            promedio=int(request.vars.PromedioEntero) + float(request.vars.PromedioDecimal)/100,\n                                            direccion="",\n                                            telefono_habitacion="",\n                                            telefono_otro="",\n                                            fecha_nacimiento="",\n                                            sexo="",\n                                            estatus="Pre-inscrito",\n                                            cohorte=cohorte,\n                                            ci_representante="",\n                                            nombre_representante="",\n                                            apellido_representante="",\n                                            sexo_representante="",\n                                            correo_representante="",\n                                            direccion_representante="",\n                                            nombre_liceo=request.vars.liceo,\n                                            telefono_representante_oficina="",\n                                            telefono_representante_otro="",\n                                            sufre_enfermedad="",\n                                            enfermedad="",\n                                            indicaciones_enfermedad="")\n\n                            response.flash = "Estudiante agregado exitosamente"\n                        else:\n                            response.flash = "El formato de la cedula no es el correcto"\n                    else:\n                        response.flash = "El liceo no se encuentra en la base de datos"\n                else:\n                    response.flash = "El promedio debe ser un valor comprendido entre 0 y 20"\n            else:\n                response.flash = "Ya existe un usuario con esa c\xc3\xa9dula"\n\n    #######################\n    # Agregar coordinador de liceo manualmente\n    #######################\n\n        elif request.vars.tipoUsuario == "coordinadorLiceo":\n            if (not(db(db.usuario.username == request.vars.cedula).select()) and not(db(db.representante_liceo.ci == request.vars.cedula).select())):\n                if db(db.liceo.nombre == request.vars.liceo).select():                # Verificamos que el liceo este en la base de datos\n                    if re.match(\'^[0-9]{1,8}$\', request.vars.cedula):\n                        id = db.usuario.insert(first_name = request.vars.nombres ,\n                                               last_name = request.vars.apellidos,\n                                               email = "",\n                                               username = request.vars.cedula,\n                                               password = db.usuario.password.validate(request.vars.cedula)[0],\n                                               registration_key = "",\n                                               reset_password_key = "",\n                                               registration_id = "" ) # Agregar el usuario\n\n                        db.auth_membership.insert(user_id = id, group_id=3) # Agregar permisos de representante liceo (group_id=3)\n\n                        db.representante_liceo.insert(\n                                                      Nombre=request.vars.nombres,\n                                                      Apellido=request.vars.apellidos,\n                                                      ci=request.vars.cedula,\n                                                      nombre_liceo=request.vars.liceo) # Agregar el representante de liceo\n                        response.flash = "Coordinador del liceo agregado exitosamente"\n                    else:\n                        response.flash = "El formato de la cedula no es el correcto"\n                else:\n                    response.flash = "El liceo no se encuentra en la base de datos"\n            else:\n                response.flash = "Ya existe un usuario con esa c\xc3\xa9dula"\n\n    #######################\n    # Agregar coordinador pio manualmente\n    #######################\n\n        elif request.vars.tipoUsuario == "coordinadorSede":\n            if (not(db(db.usuario.username == request.vars.cedula).select()) and not(db(db.representante_sede.ci == request.vars.cedula).select())):\n                if request.vars.sede=="Sartenejas" or request.vars.sede=="Litoral" or request.vars.sede=="Higuerote" or request.vars.sede=="Guarenas":\n                    if re.match(\'^[0-9]{1,8}$\', request.vars.cedula):\n                        representante_nuevo = db.usuario.insert(first_name = request.vars.nombres,\n                                                                last_name = request.vars.apellidos,\n                                                                email = "",\n                                                                username = request.vars.cedula,\n                                                                password = db.usuario.password.validate(request.vars.cedula)[0],\n                                                                registration_key = "",\n                                                                reset_password_key = "",\n                                                                registration_id = "" ) # Agregar el usuario\n\n                        db.auth_membership.insert(user_id = representante_nuevo, group_id=4) # Agregar permisos de representante sede (group_id=4)\n\n                        db.representante_sede.insert(ci=request.vars.cedula,\n                                                    Nombre=request.vars.nombres,\n                                                    Apellido=request.vars.apellidos,\n                                                    sede=request.vars.sede) # Agregar el representante de sede\n                        response.flash = "Representante de sede agregado exitosamente"\n                    else:\n                        response.flash = "El formato de la cedula no es el correcto"\n                else:\n                    response.flash = "La sede no se encuentra en la base de datos"\n            else:\n                response.flash = "Ya existe un usuario con esa c\xc3\xa9dula"\n\n\n    #######################\n    # Agregar profesor manualmente\n    #######################\n\n        elif request.vars.tipoUsuario == "profesor":\n            if (not(db(db.usuario.username == request.vars.cedula).select())):\n                if re.match(\'^[0-9]{1,8}$\', request.vars.cedula):\n                    id = db.usuario.insert(first_name = request.vars.nombres,\n                                                    last_name = request.vars.apellidos,\n                                                    email = "",\n                                                    username = request.vars.cedula,\n                                                    password = db.usuario.password.validate(request.vars.cedula)[0],\n                                                    registration_key = "",\n                                                    reset_password_key = "",\n                                                    registration_id = "" ) # Agregar el usuario\n                    db.auth_membership.insert(user_id = id, group_id= 2) # Agregar permisos de profesor\n\n                    db.profesor.insert(Nombre = request.vars.nombres,\n                                        Apellido = request.vars.apellidos,\n                                        ci = request.vars.cedula,\n                                        correo = \'\')\n                    response.flash = \'Agregado profesor exitosamente\'\n\n                else:\n                    response.flash= "El formato de la cedula no es el correcto"\n            else:\n                response.flash = "Ya existe un usuario con esa cedula"\n    #####################################\n    # Agregar administradores manualmente\n    #####################################\n\n        elif request.vars.tipoUsuario == "admin":\n            if (not(db(db.usuario.username == request.vars.cedula).select())):\n                if re.match(\'^[0-9]{1,8}$\', request.vars.cedula):\n                    admin_nuevo = db.usuario.insert(first_name = request.vars.nombres,\n                                                    last_name = request.vars.apellidos,\n                                                    email = request.vars.email,\n                                                    username = request.vars.cedula,\n                                                    password = db.usuario.password.validate(request.vars.cedula)[0],\n                                                    registration_key = "",\n                                                    reset_password_key = "",\n                                                    registration_id = "" ) # Agregar el usuario\n\n                    db.auth_membership.insert(user_id = admin_nuevo, group_id= 5) # Agregar permisos de estudiantes\n                    response.flash = "Adminitrador agregado exitosamente"\n                else:\n                    response.flash= "El formato de la cedula no es el correcto"\n            else:\n                response.flash = "Ya existe un usuario con esa cedula"\n    elif formularioAgregarManual.errors:\n        response.flash = "Formulario no fue aceptado VERSION 1"\n\n\n\n    #######################\n    # Agregar liceo manualmente\n    #######################\n\n    formularioLiceoManual = SQLFORM(db.liceo)\n    if formularioLiceoManual.process().accepted:\n        response.flash = "Agregado Exitosamente"\n    elif formularioLiceoManual.errors:\n        response.flash = "Hay Errores en el formulario"\n\n    ########################\n    ###Consula de datos\n    ########################\n    T.force(\'es\')\n    username = auth.user.username\n    usuario = db(db.usuario.username==username).select().first()\n\n    formAdministrador = SQLFORM.factory(\n        Field(\'first_name\' +  \'last_name\',\n            type=\'string\',\n            default=usuario.first_name + " " + usuario.last_name,\n            requires=db.usuario.first_name.requires and db.usuario.last_name.requires,\n            label=\'nombre\'\n            ),\n        Field(\'username\',\n            type=\'string\',\n            notnull = True,\n            default=usuario.username,\n            requires=db.usuario.username.requires,\n            label=\'ci\'\n            ),\n        Field(\'email\',\n            type=\'string\',\n            default=usuario.email,\n            requires=db.usuario.email.requires,\n            label=\'email\'),\n        readonly = True\n        )\n\n    if formAdministrador.process(session=None, formname=\'perfil del administrador\', keepvalues=True).accepted:\n        response.flash = \'El formulario fue aceptado exitosamente.\'\n\n    elif formAdministrador.errors:\n        #error = True\n        response.flash = \'Hay un error en un campo.\'\n    ############################\n    ###fin de Consula de datos\n    ############################\n\n    #######################\n    # Para los desplegables\n    #######################\n\n    liceos = db(db.liceo.id>0).select()\n\n    sedes = db(db.sede.id>0).select()\n    profesores = db(db.profesor.id>0).select()\n    cohortes = db(db.cohorte.id>0).select()\n\n    ##########################\n    # Fin de los desplegables\n    ##########################\n\n    #############\n    # Consulta\n    #############\n    consulta = None\n    formularioConsulta = FORM()\n    consultarTodo = FORM()\n\n    if consultarTodo.accepts(request.vars,formname="consultarTodo"):\n        consulta = db(db.usuario.id>0).select()\n\n    if formularioConsulta.accepts(request.vars,formname="formularioConsulta"):\n        pass\n\n    ###############\n    # Fin Consulta\n    ###############\n\n    #################\n    # Eliminar liceo\n    #################\n\n    formularioEliminarLiceo = FORM()\n    if formularioEliminarLiceo.accepts(request.vars,formname="formularioEliminarLiceo"):\n        db(db.liceo.nombre==request.vars.liceoEliminar).delete()\n        response.flash = \'Eliminado exitosamente el liceo \' + str(request.vars.liceoEliminar)\n    elif formularioEliminarLiceo.errors:\n        response.flash = \'No se pudo eliminar el liceo\'\n\n    #####################\n    # Fin eliminar liceo\n    #####################\n\n    return dict(formAdministrador=formAdministrador, erroresCarga=erroresCarga,\n                cargaExitosa=cargaExitosa, eliminando=eliminando,\n                tipoUserEliminando=tipoUserEliminando, modificando=modificando,\n                formularioModificar = formularioModificar, liceos=liceos,\n                sedes=sedes, profesores=profesores, cohortes=cohortes,\n                consulta=consulta, formularioLiceoManual=formularioLiceoManual)\n\n\n@auth.requires_membership(\'Profesor\')\n@auth.requires_login()\ndef profesor():\n    return dict()\n\n@auth.requires_membership(\'Representante_liceo\')\n@auth.requires_login()\ndef coordinadorLiceo():\n\n    ##################\n    # Carga de archivo\n    ##################\n    erroresCarga = [] # Los errores en la carga van aqui\n    cargaExitosa = [] # Los usuarios agregados exitosamente van aqui\n    cohorte = db(db.cohorte.activo==True).select()[0].identificador # Cohorte Actual\n    liceo = db(db.representante_liceo.ci == auth.user.username).select()[0].nombre_liceo # Liceo al que pertenece el representante logiado\n\n    formularioArchivo = FORM(\n                            INPUT(_name=\'tituloArchivo\', _type=\'text\'),\n                            INPUT(_name=\'archivo\', _type=\'file\')\n                            )\n    if formularioArchivo.accepts(request.vars,formname=\'formularioArchivo\'): # Chequeamos si hay un archivo cargado\n        archivo =request.vars.fileToUpload.filename.split(".")  # Separamos el nombre del archivo de la extension\n        nombreArchivo, extension = archivo[0], archivo[1]\n        if extension == "csv":          # Chequeamos la extension del archivo\n            ######################\n            # Cargando Estudiantes\n            ######################\n            f = request.vars.fileToUpload.file      # Archivo cargado\n            texto = f.read().splitlines()           # Leer el archivo\n            cabecera = texto[0].split(";")          # Extraemos la cabecera\n            chequeoFormato = texto[1].split(";")    # Extraemos la segunda linea del archivo\n            texto.remove(texto[1])                  # Eliminamos la segunda linea del archivo para no iterar sobre ella\n            texto.remove(texto[0])                  # Eliminamos del texto la cabecera para no iterar sobre ella\n            if (cabecera[0]=="C.I." and cabecera[1]==\'Nombres\' and\n                cabecera[2]==\'Apellidos\' and cabecera[3]==\'Promedio (00.00)\' and\n                chequeoFormato[0]=="A continuacion coloque sus estudiantes con el formato indicado"): # Verificamos que la cabecera tenga el formato correcto\n                datos = []                          # Los usuarios a agregar van aqui\n                for i in texto:\n                    if i != ";;;;":\n                        dato = i.split(";")         # Separamos los datos del usuario\n                        datos.append(dato)          # Agregamos el usuario a la lista de usuarios por agregar\n\n                for i in datos:\n                    if (not(db(db.usuario.username == i[0]).select()) and\n                       not(db(db.estudiante.ci == i[0]).select())):         # Verificar que no existe un usuario para esa cedula\n                        if 0 <= float(i[3]) <= 20:                          # Verificamos que el indice sea correcto\n                            if db(db.liceo.nombre == liceo).select():       # Verificamos que el liceo este en la base de datos\n                                if re.match(\'^[0-9]{1,8}$\', i[0]):      # Verificamos que la cedula cumpla la expresion regular\n                                    id = db.usuario.insert(first_name = i[1],last_name = i[2], email = "", username = i[0],\n                                                  password = db.usuario.password.validate(i[0])[0], registration_key = "",\n                                                  reset_password_key = "", registration_id = "" )       # Agregar el usuario\n                                    db.auth_membership.insert(user_id = id, group_id= 1)                # Agregar permisos de estudiante (group_id=1)\n                                    db.estudiante.insert(nombre=i[1], apellido=i[2], ci=i[0], promedio=float(i[3]), direccion="", telefono_habitacion="",\n                                                    telefono_otro="", fecha_nacimiento="", sexo="", estatus="Pre-inscrito",\n                                                    cohorte=cohorte, ci_representante="", nombre_representante="",\n                                                    apellido_representante="", sexo_representante="", correo_representante="",\n                                                    direccion_representante="", nombre_liceo=liceo, telefono_representante_oficina="",\n                                                    telefono_representante_otro="", sufre_enfermedad="", enfermedad="",\n                                                    indicaciones_enfermedad="")     # Agregamos el estudiante Cohorte deberia ser una variable global\n                                    cargaExitosa.append(i)                          # Agregarlo a los estudiantes cargados exitosamente\n                                else:\n                                    erroresCarga.append([i,"Cedula incorrecta"])  # Error de Carga\n                            else:\n                                erroresCarga.append([i,"Su liceo no esta en la base de datos. Contacte al administrador"])  # Error de Carga\n                        else:\n                            erroresCarga.append([i,"El promedio debe ser un numero entre 0 y 20"])                          # Error de Carga\n                    else:\n                        erroresCarga.append([i,"Ya existe un usuario en el sistema con esta cedula"])                       # Error de Carga\n\n            else: #Error\n                erroresCarga.append("Formato de los datos del archivo invalido. Consulte el manual")                        # Error de Carga\n\n        else: #Error\n            erroresCarga.append("El formato del archivo debe ser \\".csv\\". Consulte el manual de usuario")\n    else:\n        pass\n\n    ######################\n    # Fin Carga de Archivo\n    ######################\n\n    ########################\n    ###Consula de datos\n    ########################\n    T.force(\'es\')\n    username = auth.user.username\n    representante_liceo=db(db.representante_liceo.ci==username).select().first()\n    usuario = db(db.usuario.username==username).select().first()\n    #tipo=""\n    #error = False\n\n    formDatosBasicos = SQLFORM.factory(\n        Field(\'first_name\' +  \'last_name\',\n            type=\'string\',\n            default=usuario.first_name + " " + usuario.last_name,\n            requires=db.usuario.first_name.requires and db.usuario.last_name.requires,\n            label=\'nombre\'\n            ),\n        Field(\'username\',\n            type=\'string\',\n            notnull = True,\n            default=usuario.username,\n            requires=db.usuario.username.requires,\n            label=\'ci\'\n            ),\n        Field(\'email\',\n            type=\'string\',\n            default=usuario.email,\n            requires=db.usuario.email.requires,\n            label=\'email\'),\n        readonly = True\n        )\n\n    if formDatosBasicos.process(session=None, formname=\'perfil basico del Representante liceo de sede\', keepvalues=True).accepted:\n        response.flash = \'El formulario fue aceptado exitosamente.\'\n\n    elif formDatosBasicos.errors:\n        #error = True\n        response.flash = \'Hay un error en un campo.\'\n\n    formCoordinadorLiceo = SQLFORM.factory(\n        Field(\'ci\',\n            type=\'string\',\n            notnull=True,\n            default=representante_liceo.ci,\n            requires=db.representante_liceo.ci.requires,\n            label=\'ci\'\n            ),\n        Field(\'first_name\' +  \'last_name\',\n            type=\'string\',\n            default=usuario.first_name + " " + usuario.last_name,\n            requires=db.usuario.first_name.requires and db.usuario.last_name.requires,\n            label=\'nombre\'\n            ),\n        Field(\'nombre_liceo\',\n            type=\'string\',\n            default=representante_liceo.nombre_liceo,\n            requires=db.representante_liceo.nombre_liceo.requires,\n            label=\'nombre_liceo\'\n            ),\n        Field(\'email\',\n            type=\'date\',\n            default=usuario.email,\n            requires=db.usuario.email.requires,\n            label=\'email\'),\n        readonly = True\n        )\n\n    if formCoordinadorLiceo.process(session=None, formname=\'perfil del Representante Liceo de sede\', keepvalues=True).accepted:\n        response.flash = \'El formulario fue aceptado exitosamente.\'\n\n    elif formCoordinadorLiceo.errors:\n        #error = True\n        response.flash = \'Hay un error en un campo.\'\n    ############################\n    ###fin de Consula de datos\n    ############################\n\n    return dict(formCoordinadorLiceo=formCoordinadorLiceo, formDatosBasicos=formDatosBasicos, erroresCarga=erroresCarga, cargaExitosa=cargaExitosa)\n\n@auth.requires_membership(\'Representante_sede\')\n@auth.requires_login()\ndef coordinadorPio():\n\n    ########################\n    ###Consula de datos\n    ########################\n    T.force(\'es\')\n    username = auth.user.username\n    representante_sede=db(db.representante_sede.ci==username).select().first()\n    usuario = db(db.usuario.username==username).select().first()\n    #tipo=""\n    #error = False\n\n    formDatosBasicos = SQLFORM.factory(\n        Field(\'first_name\' +  \'last_name\',\n            type=\'string\',\n            default=usuario.first_name + " " + usuario.last_name,\n            requires=db.usuario.first_name.requires and db.usuario.last_name.requires,\n            label=\'nombre\'\n            ),\n        Field(\'username\',\n            type=\'string\',\n            notnull = True,\n            default=usuario.username,\n            requires=db.usuario.username.requires,\n            label=\'ci\'\n            ),\n        Field(\'email\',\n            type=\'string\',\n            default=usuario.email,\n            requires=db.usuario.email.requires,\n            label=\'email\'),\n        readonly = True\n        )\n\n    if formDatosBasicos.process(session=None, formname=\'perfil basico del Representante PIO de sede\', keepvalues=True).accepted:\n        response.flash = \'El formulario fue aceptado exitosamente.\'\n\n    elif formDatosBasicos.errors:\n        #error = True\n        response.flash = \'Hay un error en un campo.\'\n\n    formCoordinadorPio = SQLFORM.factory(\n        Field(\'ci\',\n            type=\'string\',\n            notnull=True,\n            default=representante_sede.ci,\n            requires=db.representante_sede.ci.requires,\n            label=\'ci\'\n            ),\n        Field(\'first_name\' +  \'last_name\',\n            type=\'string\',\n            default=usuario.first_name + " " + usuario.last_name,\n            requires=db.usuario.first_name.requires and db.usuario.last_name.requires,\n            label=\'nombre\'\n            ),\n        Field(\'sede\',\n            type=\'string\',\n            default=representante_sede.sede,\n            requires=db.representante_sede.sede.requires,\n            label=\'sede\'\n            ),\n        Field(\'email\',\n            type=\'date\',\n            default=usuario.email,\n            requires=db.usuario.email.requires,\n            label=\'email\'),\n        readonly = True\n        )\n\n    if formCoordinadorPio.process(session=None, formname=\'perfil del Representante PIO de sede\', keepvalues=True).accepted:\n        response.flash = \'El formulario fue aceptado exitosamente.\'\n\n    elif formCoordinadorPio.errors:\n        #error = True\n        response.flash = \'Hay un error en un campo.\'\n    ############################\n    ###fin de Consula de datos\n    ############################\n\n    return dict(formDatosBasicos=formDatosBasicos, formCoordinadorPio=formCoordinadorPio)\n\n@auth.requires_membership(\'Estudiante\')\n@auth.requires_login()\ndef welcome():\n\n    ########################\n    ###Consula de datos\n    ########################\n    T.force(\'es\')\n    username = auth.user.username\n    estudiante=db(db.estudiante.ci==username).select().first()\n    usuario = db(db.usuario.username==username).select().first()\n    #tipo=""\n    #error = False\n\n    formDatosBasicos = SQLFORM.factory(\n        Field(\'first_name\' +  \'last_name\',\n            type=\'string\',\n            default=usuario.first_name + " " + usuario.last_name,\n            requires=db.usuario.first_name.requires and db.usuario.last_name.requires,\n            label=\'nombre\'\n            ),\n        Field(\'username\',\n            type=\'string\',\n            notnull = True,\n            default=usuario.username,\n            requires=db.usuario.username.requires,\n            label=\'ci\'\n            ),\n        Field(\'email\',\n            type=\'string\',\n            default=usuario.email,\n            requires=db.usuario.email.requires,\n            label=\'email\'),\n        readonly = True\n        )\n\n    if formDatosBasicos.process(session=None, formname=\'perfil basico del Estudiante\', keepvalues=True).accepted:\n        response.flash = \'El formulario fue aceptado exitosamente.\'\n\n    elif formDatosBasicos.errors:\n        #error = True\n        response.flash = \'Hay un error en un campo.\'\n\n    formEstudiante = SQLFORM.factory(\n        Field(\'ci\',\n            type=\'string\',\n            notnull=True,\n            default=estudiante.ci,\n            requires=db.estudiante.ci.requires,\n            label=\'ci\'\n            ),\n        Field(\'first_name\',\n            type=\'string\',\n            default=usuario.first_name,\n            requires=db.usuario.first_name.requires and db.usuario.last_name.requires,\n            label=\'nombre\'\n            ),\n        Field(\'last_name\',\n            type=\'string\',\n            default=usuario.last_name,\n            requires=db.usuario.first_name.requires and db.usuario.last_name.requires,\n            label=\'apellido\'\n            ),\n\n        Field(\'sexo\',\n            type=\'string\',\n            default=estudiante.sexo,\n            requires=db.estudiante.sexo.requires,\n            label=\'sexo\'\n            ),\n        Field(\'fecha_nacimiento\',\n            type=\'date\',\n            default=estudiante.fecha_nacimiento,\n            requires=db.estudiante.fecha_nacimiento.requires,\n            label=\'fecha_de_nacimiento\'\n            ),\n        Field(\'promedio\',\n            type=\'string\',\n            default= estudiante.promedio,\n            requires=db.estudiante.promedio.requires,\n            label=\'promedio\'\n            ),\n        Field(\'nombre_liceo\',\n            type=\'string\',\n            default="            "+estudiante.nombre_liceo,\n            requires=db.estudiante.nombre_liceo.requires,\n            label=\'nombre_liceo\'\n            ),\n        Field(\'email\',\n            type=\'string\',\n            default=usuario.email,\n            requires=db.usuario.email.requires,\n            label=\'email\',\n            ),\n        Field(\'telefono_habitacion\',\n            type=\'integer\',\n            default=estudiante.telefono_habitacion,\n            requires=db.estudiante.telefono_habitacion.requires,\n            label=\'telefono_habitacion\',\n            ),\n        Field(\'direccion\',\n            type=\'string\',\n            default= estudiante.direccion,\n            requires=db.estudiante.direccion.requires,\n            label=\'direccion\'),\n        readonly = True\n        )\n\n    if formEstudiante.process(session=None, formname=\'perfil del Estudiante\', keepvalues=True).accepted:\n        response.flash = \'El formulario fue aceptado exitosamente.\'\n\n    elif formEstudiante.errors:\n        #error = True\n        response.flash = \'Hay un error en un campo.\'\n\n    ############################\n    ###fin de Consula de datos\n    ############################\n\n    return dict(formDatosBasicos = formDatosBasicos, formEstudiante = formEstudiante)\n\nresponse._vars=response._caller(admin)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__module__'
p12
S"'psycopg2'"
p13
sS'__getslice__'
p14
S"<method-wrapper '__getslice__' of ProgrammingError object>"
p15
sS'__str__'
p16
S"<method-wrapper '__str__' of ProgrammingError object>"
p17
sS'__reduce__'
p18
S'<built-in method __reduce__ of ProgrammingError object>'
p19
sS'__dict__'
p20
S'{}'
p21
sS'__sizeof__'
p22
S'<built-in method __sizeof__ of ProgrammingError object>'
p23
sS'__weakref__'
p24
S'None'
p25
sS'__init__'
p26
S"<method-wrapper '__init__' of ProgrammingError object>"
p27
sS'__setattr__'
p28
S"<method-wrapper '__setattr__' of ProgrammingError object>"
p29
sS'__reduce_ex__'
p30
S'<built-in method __reduce_ex__ of ProgrammingError object>'
p31
sS'__new__'
p32
S'<built-in method __new__ of type object>'
p33
sS'diag'
p34
S'<psycopg2._psycopg.Diagnostics object>'
p35
sS'__format__'
p36
S'<built-in method __format__ of ProgrammingError object>'
p37
sS'__class__'
p38
S"<class 'psycopg2.ProgrammingError'>"
p39
sS'pgerror'
p40
S'\'ERROR:  relation "sede" does not exist\\nLINE 1: S...T NULL) ORDE...\\n                               ^\\n\''
p41
sS'__doc__'
p42
S"'Error related to database programming (SQL error, table not found etc).'"
p43
sS'__getitem__'
p44
S"<method-wrapper '__getitem__' of ProgrammingError object>"
p45
sS'__setstate__'
p46
S'<built-in method __setstate__ of ProgrammingError object>'
p47
sS'__getattribute__'
p48
S"<method-wrapper '__getattribute__' of ProgrammingError object>"
p49
sS'args'
p50
S'(\'relation "sede" does not exist\\nLINE 1: SELECT  s...T NULL) ORDE...\\n                               ^\\n\',)'
p51
sS'__subclasshook__'
p52
S'<built-in method __subclasshook__ of type object>'
p53
sS'pgcode'
p54
S"'42P01'"
p55
sS'__unicode__'
p56
S'<built-in method __unicode__ of ProgrammingError object>'
p57
sS'cursor'
p58
S'<cursor object at 0x03CA3730; closed: 0>'
p59
sS'__delattr__'
p60
S"<method-wrapper '__delattr__' of ProgrammingError object>"
p61
sS'__repr__'
p62
S"<method-wrapper '__repr__' of ProgrammingError object>"
p63
sS'__hash__'
p64
S"<method-wrapper '__hash__' of ProgrammingError object>"
p65
ssS'evalue'
p66
S'relation "sede" does not exist\nLINE 1: SELECT  sede.zona FROM sede WHERE (sede.id IS NOT NULL) ORDE...\n                               ^\n'
p67
sS'request'
p68
cgluon.html
XML_unpickle
p69
(S'snh\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">ajax</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">application</td><td style="vertical-align:top;">:</td><td><div>SisPIO</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cid</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">controller</td><td style="vertical-align:top;">:</td><td><div>default</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">csrftoken</td><td style="vertical-align:top;">:</td><td><div>N4366MX2EgVTLy1IdDWZEHUiZZBpU6SkbB3ObGLTLCZMylAmmC4nqvIN1hE4c7fb<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_admin</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-be83bdad-e867-4002-ae0a-15b6cc5c9330<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_sispio</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-b820ca00-0ccc-4fd8-a905-b3947eafd3d1<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_welcome</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-5ff5fc32-2591-4e08-ba58-c5fbca78ab0e<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">sessionid</td><td style="vertical-align:top;">:</td><td><div>txtvz6yyhobygw0ileton9dqzjy2t3ma<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">env</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_ENCODING</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_LANGUAGE</td><td style="vertical-align:top;">:</td><td><div>en-US,en;q=0.5</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONNECTION</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_COOKIE</td><td style="vertical-align:top;">:</td><td><div>csrftoken=N4366MX2EgVTLy1IdDWZEHUiZZBpU6SkbB3ObGLTLCZMylAmmC4nqvIN1hE4c7fb; sessionid=txtvz6yyhobygw0ileton9dqzjy2t3ma; session_id_welcome=127.0.0.1-5ff5fc32-2591-4e08-ba58-c5fbca78ab0e; session_id_admin=127.0.0.1-be83bdad-e867-4002-ae0a-15b6cc5c9330; session_id_sispio=127.0.0.1-b820ca00-0ccc-4fd8-a905-b3947eafd3d1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_HOST</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_REFERER</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000/SisPIO/default/index</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_UPGRADE_INSECURE_REQUESTS</td><td style="vertical-align:top;">:</td><td><div>1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_USER_AGENT</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:56.0) Gecko/20100101 Firefox/56.0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">PATH_INFO</td><td style="vertical-align:top;">:</td><td><div>/SisPIO/default/admin</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">QUERY_STRING</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_ADDR</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_PORT</td><td style="vertical-align:top;">:</td><td><div>50547</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REQUEST_METHOD</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SCRIPT_NAME</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_NAME</td><td style="vertical-align:top;">:</td><td><div>DESKTOP-FLGPCSQ</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PORT</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PROTOCOL</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_SOFTWARE</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;C:\\\\Users\\\\capf9\\\\Desktop\\\\University\\\\web2py_win\\\\web2py\\\\applications\\\\welcome\\\\&#x27;, &#x27;C:\\\\Users\\\\capf9\\\\Desktop\\\\University\\\\web2py_win\\\\web2py\\\\applications\\\\admin\\\\&#x27;, &#x27;C:\\\\Users\\\\capf9\\\\Desktop\\\\University\\\\web2py_win\\\\web2py\\\\applications\\\\SisPIO\\\\&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x23ffd78: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;DESKTOP-FLGPCSQ&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;port&#x27;: 8000, &#x27;print_errors&#x27;: False, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;C:\\\\Users\\\\capf9\\\\Desktop\\\\University\\\\web2py_win\\\\web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;******&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_encoding</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_language</td><td style="vertical-align:top;">:</td><td><div>en-US,en;q=0.5</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_connection</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cookie</td><td style="vertical-align:top;">:</td><td><div>csrftoken=N4366MX2EgVTLy1IdDWZEHUiZZBpU6SkbB3ObGLTLCZMylAmmC4nqvIN1hE4c7fb; sessionid=txtvz6yyhobygw0ileton9dqzjy2t3ma; session_id_welcome=127.0.0.1-5ff5fc32-2591-4e08-ba58-c5fbca78ab0e; session_id_admin=127.0.0.1-be83bdad-e867-4002-ae0a-15b6cc5c9330; session_id_sispio=127.0.0.1-b820ca00-0ccc-4fd8-a905-b3947eafd3d1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_host</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_referer</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000/SisPIO/default/index</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_upgrade_insecure_requests</td><td style="vertical-align:top;">:</td><td><div>1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_user_agent</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:56.0) Gecko/20100101 Firefox/56.0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>2001:0:9d38:6abd:20f3:1e91:3f57:fef5</div></td></tr><tr><td><div>192.168.1.10</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>fe80::20f3:1e91:3f57:fef5%11</div></td></tr><tr><td><div>127.0.0.1</div></td></tr><tr><td><div>DESKTOP-FLGPCSQ</div></td></tr><tr><td><div>fe80::31f0:99b4:d6f4:33e6%9</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path_info</td><td style="vertical-align:top;">:</td><td><div>/SisPIO/default/admin</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">query_string</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_addr</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_port</td><td style="vertical-align:top;">:</td><td><div>50547</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_method</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_uri</td><td style="vertical-align:top;">:</td><td><div>/SisPIO/default/admin</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">script_name</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_name</td><td style="vertical-align:top;">:</td><td><div>DESKTOP-FLGPCSQ</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_port</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_protocol</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_software</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_path</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.14.6-stable+timestamp.2016.05.10.00.21.47</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x0204D0D0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x038F9110&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x03C09D70&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x0204D0D0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x038F9110&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x03C09D70&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">extension</td><td style="vertical-align:top;">:</td><td><div>html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">folder</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py\\applications\\SisPIO\\</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">function</td><td style="vertical-align:top;">:</td><td><div>admin</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">global_settings</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;C:\\\\Users\\\\capf9\\\\Desktop\\\\University\\\\web2py_win\\\\web2py\\\\applications\\\\welcome\\\\&#x27;, &#x27;C:\\\\Users\\\\capf9\\\\Desktop\\\\University\\\\web2py_win\\\\web2py\\\\applications\\\\admin\\\\&#x27;, &#x27;C:\\\\Users\\\\capf9\\\\Desktop\\\\University\\\\web2py_win\\\\web2py\\\\applications\\\\SisPIO\\\\&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x23ffd78: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;DESKTOP-FLGPCSQ&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;port&#x27;: 8000, &#x27;print_errors&#x27;: False, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;C:\\\\Users\\\\capf9\\\\Desktop\\\\University\\\\web2py_win\\\\web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;******&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>2001:0:9d38:6abd:20f3:1e91:3f57:fef5</div></td></tr><tr><td><div>192.168.1.10</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>fe80::20f3:1e91:3f57:fef5%11</div></td></tr><tr><td><div>127.0.0.1</div></td></tr><tr><td><div>DESKTOP-FLGPCSQ</div></td></tr><tr><td><div>fe80::31f0:99b4:d6f4:33e6%9</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.14.6-stable+timestamp.2016.05.10.00.21.47</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_https</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_local</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_restful</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_scheduler</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_shell</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">now</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2017, 11, 4, 13, 42, 54, 346000)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_args</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_extension</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">url</td><td style="vertical-align:top;">:</td><td><div>/SisPIO/default/admin</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">utcnow</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2017, 11, 4, 17, 42, 54, 346000)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi</td><td style="vertical-align:top;">:</td><td><div>&lt;gluon.main.LazyWSGI object at 0x039DAE70&gt;</div></td></tr></table></div>'
tRp70
sS'frames'
p71
(lp72
(dp73
S'file'
p74
S'C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py\\gluon\\restricted.py'
p75
sS'dump'
p76
(dp77
S'environment'
p78
S"{'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'AppConfig': <function AppConfig>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, ...}"
p79
sS'ccode'
p80
S'<code object <module> at 039D1A40, file "C:\\User...ications\\SisPIO\\controllers/default.py", line 10>'
p81
ssS'lnum'
p82
I227
sS'lines'
p83
(dp84
I224
S'            ccode = code'
p85
sI225
S'        else:'
p86
sI226
S'            ccode = compile2(code, layer)'
p87
sI227
S'        exec ccode in environment'
p88
sI228
S'    except HTTP:'
p89
sI229
S'        raise'
p90
sI230
S'    except RestrictedError:'
p91
sI231
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p92
sI222
S'    try:'
p93
sI223
S'        if isinstance(code, types.CodeType):'
p94
ssS'call'
p95
S"(code='# -*- coding: utf-8 -*-\\n# this file is released ...udiante)\\n\\nresponse._vars=response._caller(admin)\\n', environment={'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'AppConfig': <function AppConfig>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, ...}, layer=r'C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py\\applications\\SisPIO\\controllers/default.py')"
p96
sS'func'
p97
S'restricted'
p98
sa(dp99
g74
S'C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py\\applications\\SisPIO\\controllers\\default.py'
p100
sg76
(dp101
sg82
I1018
sg83
(dp102
I1007
S''
sI1008
S'    elif formEstudiante.errors:'
p103
sI1009
S'        #error = True'
p104
sI1010
S"        response.flash = 'Hay un error en un campo.'"
p105
sI1011
S''
sI1012
S'    ############################'
p106
sI1013
S'    ###fin de Consula de datos'
p107
sI1014
S'    ############################'
p108
sI1015
S''
sI1016
S'    return dict(formDatosBasicos = formDatosBasicos, formEstudiante = formEstudiante)'
p109
ssg95
S'()'
p110
sg97
S'<module>'
p111
sa(dp112
g74
S'C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py\\gluon\\globals.py'
p113
sg76
(dp114
S'self'
p115
S'undefined'
p116
sS'f'
S'<function admin>'
p117
ssg82
I417
sg83
(dp118
I416
S'        self._vars = None'
p119
sI417
S'        self._caller = lambda f: f()'
p120
sI418
S'        self._view_environment = None'
p121
sI419
S'        self._custom_commit = None'
p122
sI420
S'        self._custom_rollback = None'
p123
sI421
S"        self.generic_patterns = ['*']"
p124
sI412
S"        self.flash = ''            # used by the default view layout"
p125
sI413
S'        self.meta = Storage()      # used by web2py_ajax.html'
p126
sI414
S'        self.menu = []             # used by the default view layout'
p127
sI415
S'        self.files = []            # used by web2py_ajax.html'
p128
ssg95
S'(f=<function admin>)'
p129
sg97
S'<lambda>'
p130
sa(dp131
g74
S'C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py\\gluon\\tools.py'
p132
sg76
(dp133
S'action'
p134
S'<function admin>'
p135
sS'a'
S'()'
p136
sS'b'
g21
ssg82
I4241
sg83
(dp137
I4236
S'                    flag = condition'
p138
sI4237
S'                if not flag:'
p139
sI4238
S'                    current.session.flash = self.messages.access_denied'
p140
sI4239
S'                    return call_or_redirect('
p141
sI4240
S'                        self.settings.on_failed_authorization)'
p142
sI4241
S'                return action(*a, **b)'
p143
sI4242
S'            f.__doc__ = action.__doc__'
p144
sI4243
S'            f.__name__ = action.__name__'
p145
sI4244
S'            f.__dict__.update(action.__dict__)'
p146
sI4245
S'            return f'
p147
ssg95
S'(*a=(), **b={})'
p148
sg97
S'f'
sa(dp149
g74
S'C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py\\gluon\\tools.py'
p150
sg76
(dp151
S'action'
p152
S'<function admin>'
p153
sS'a'
S'()'
p154
sS'b'
g21
ssg82
I4241
sg83
(dp155
I4236
S'                    flag = condition'
p156
sI4237
S'                if not flag:'
p157
sI4238
S'                    current.session.flash = self.messages.access_denied'
p158
sI4239
S'                    return call_or_redirect('
p159
sI4240
S'                        self.settings.on_failed_authorization)'
p160
sI4241
S'                return action(*a, **b)'
p161
sI4242
S'            f.__doc__ = action.__doc__'
p162
sI4243
S'            f.__name__ = action.__name__'
p163
sI4244
S'            f.__dict__.update(action.__dict__)'
p164
sI4245
S'            return f'
p165
ssg95
S'(*a=(), **b={})'
p166
sg97
S'f'
sa(dp167
g74
S'C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py\\applications\\SisPIO\\controllers\\default.py'
p168
sg76
(dp169
S'global db'
p170
S'<DAL uri="postgres:******@localhost/SisPIO">'
p171
sS'global SQLFORM'
p172
S"<class 'gluon.sqlhtml.SQLFORM'>"
p173
sS'db.liceo'
p174
S'<Table liceo (id, nombre, tipo, sede)>'
p175
sS'formularioLiceoManual'
p176
g116
ssg82
I554
sg83
(dp177
I549
S''
sI550
S'    #######################'
p178
sI551
S'    # Agregar liceo manualmente'
p179
sI552
S'    #######################'
p180
sI553
S''
sI554
S'    formularioLiceoManual = SQLFORM(db.liceo)'
p181
sI555
S'    if formularioLiceoManual.process().accepted:'
p182
sI556
S'        response.flash = "Agregado Exitosamente"'
p183
sI557
S'    elif formularioLiceoManual.errors:'
p184
sI558
S'        response.flash = "Hay Errores en el formulario"'
p185
ssg95
S'()'
p186
sg97
S'admin'
p187
sa(dp188
g74
S'C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py\\gluon\\sqlhtml.py'
p189
sg76
(dp190
S'default'
p191
S'None'
p192
sS'self.widgets.options.widget'
p193
S"<bound method type.widget of <class 'gluon.sqlhtml.OptionsWidget'>>"
p194
sS'self'
p195
S'<gluon.sqlhtml.SQLFORM object>'
p196
sS'inp'
p197
S'<gluon.html.SELECT object>'
p198
sS'self.widgets'
p199
S"<Storage {'multiple': <class 'gluon.sqlhtml.Mult...ss 'gluon.sqlhtml.OptionsWidget'>, 'blob': None}>"
p200
sS'field'
p201
S'<pydal.objects.Field object>'
p202
sS'self.widgets.options'
p203
S"<class 'gluon.sqlhtml.OptionsWidget'>"
p204
ssg82
I1295
sg83
(dp205
I1290
S"                    inpval = 'checked'"
p206
sI1291
S'                else:'
p207
sI1292
S"                    inpval = ''"
p208
sI1293
S'            elif OptionsWidget.has_options(field):'
p209
sI1294
S'                if not field.requires.multiple:'
p210
sI1295
S'                    inp = self.widgets.options.widget(field, default)'
p211
sI1296
S'                else:'
p212
sI1297
S'                    inp = self.widgets.multiple.widget(field, default)'
p213
sI1298
S'                if fieldname in keepopts:'
p214
sI1299
S'                    inpval = CAT(*inp.components)'
p215
ssg95
S"(self=<gluon.sqlhtml.SQLFORM object>, table=<Table liceo (id, nombre, tipo, sede)>, record=None, deletable=False, linkto=None, upload=None, fields=['id', 'nombre', 'tipo', 'sede'], labels=None, col3={}, submit_button='Submit', delete_label='Check to delete', showid=True, readonly=False, comments=True, keepopts=[], ignore_rw=False, record_id=None, formstyle=None, buttons=['submit'], separator=None, extra_fields=[], **attributes={})"
p216
sg97
g26
sa(dp217
g74
S'C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py\\gluon\\sqlhtml.py'
p218
sg76
(dp219
S'].options'
p220
g116
sS'requires'
p221
S'[<gluon.validators.IS_IN_DB object>]'
p222
sS'options'
p223
g116
ssg82
I313
sg83
(dp224
I308
S'        requires = field.requires'
p225
sI309
S'        if not isinstance(requires, (list, tuple)):'
p226
sI310
S'            requires = [requires]'
p227
sI311
S'        if requires:'
p228
sI312
S"            if hasattr(requires[0], 'options'):"
p229
sI313
S'                options = requires[0].options()'
p230
sI314
S'            else:'
p231
sI315
S'                raise SyntaxError('
p232
sI316
S"                    'widget cannot determine options of %s' % field)"
p233
sI317
S'        opts = [OPTION(v, _value=k) for (k, v) in options]'
p234
ssg95
S"(cls=<class 'gluon.sqlhtml.OptionsWidget'>, field=<pydal.objects.Field object>, value=None, **attributes={})"
p235
sg97
S'widget'
p236
sa(dp237
g74
S'C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py\\gluon\\validators.py'
p238
sg76
(dp239
S'self'
p240
S'<gluon.validators.IS_IN_DB object>'
p241
sS'self.build_set'
p242
S'<bound method IS_IN_DB.build_set of <gluon.validators.IS_IN_DB object>>'
p243
ssg82
I598
sg83
(dp244
I593
S'            self.labels = [self.label % r for r in records]'
p245
sI594
S'        else:'
p246
sI595
S'            self.labels = [self.label(r) for r in records]'
p247
sI596
S''
sI597
S'    def options(self, zero=True):'
p248
sI598
S'        self.build_set()'
p249
sI599
S'        items = [(k, self.labels[i]) for (i, k) in enumerate(self.theset)]'
p250
sI600
S'        if self.sort:'
p251
sI601
S'            items.sort(options_sorter)'
p252
sI602
S'        if zero and self.zero is not None and not self.multiple:'
p253
ssg95
S'(self=<gluon.validators.IS_IN_DB object>, zero=True)'
p254
sg97
S'options'
p255
sa(dp256
g74
S'C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py\\gluon\\validators.py'
p257
sg76
(dp258
S'self.dbset'
p259
S'<Set None>'
p260
sS'fields'
p261
S'[<pydal.objects.Field object>]'
p262
sS'self'
p263
S'<gluon.validators.IS_IN_DB object>'
p264
sS').select'
p265
g116
sS'records'
p266
g116
sS'table'
p267
S'<Table sede (id, zona)>'
p268
sS'dd'
p269
S"{'cache': None, 'cacheable': True, 'distinct': None, 'groupby': None, 'left': None, 'orderby': <pydal.objects.Field object>}"
p270
ssg82
I584
sg83
(dp271
I579
S'            distinct = self.distinct'
p272
sI580
S'            left = self.left'
p273
sI581
S'            dd = dict(orderby=orderby, groupby=groupby,'
p274
sI582
S'                      distinct=distinct, cache=self.cache,'
p275
sI583
S'                      cacheable=True, left=left)'
p276
sI584
S'            records = self.dbset(table).select(*fields, **dd)'
p277
sI585
S'        else:'
p278
sI586
S'            orderby = self.orderby or \\'
p279
sI587
S'                reduce(lambda a, b: a | b, ('
p280
sI588
S"                    f for f in fields if not f.name == 'id'))"
p281
ssg95
S'(self=<gluon.validators.IS_IN_DB object>)'
p282
sg97
S'build_set'
p283
sa(dp284
g74
S'C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py\\gluon\\packages\\dal\\pydal\\objects.py'
p285
sg76
(dp286
S'self.query'
p287
S'<Query (sede.id IS NOT NULL)>'
p288
sS'adapter.select'
p289
S'<bound method PostgreSQLAdapter.select of <pydal.adapters.postgres.PostgreSQLAdapter object>>'
p290
sS'fields'
p291
S'[<pydal.objects.Field object>]'
p292
sS'adapter'
p293
S'<pydal.adapters.postgres.PostgreSQLAdapter object>'
p294
sS'attributes'
p295
S"{'cache': None, 'cacheable': True, 'distinct': None, 'groupby': None, 'left': None, 'orderby': <pydal.objects.Field object>}"
p296
sS'self'
p297
S'<Set (sede.id IS NOT NULL)>'
p298
ssg82
I2020
sg83
(dp299
I2016
S"                                    attributes.get('left', None),"
p300
sI2017
S"                                    attributes.get('orderby', None),"
p301
sI2018
S"                                    attributes.get('groupby', None))"
p302
sI2019
S'        fields = adapter.expand_all(fields, tablenames)'
p303
sI2020
S'        return adapter.select(self.query, fields, attributes)'
p304
sI2021
S''
sI2022
S'    def iterselect(self, *fields, **attributes):'
p305
sI2023
S'        adapter = self.db._adapter'
p306
sI2024
S'        tablenames = adapter.tables(self.query,'
p307
sI2015
S"                                    attributes.get('join', None),"
p308
ssg95
S"(self=<Set (sede.id IS NOT NULL)>, *fields=[<pydal.objects.Field object>], **attributes={'cache': None, 'cacheable': True, 'distinct': None, 'groupby': None, 'left': None, 'orderby': <pydal.objects.Field object>})"
p309
sg97
S'select'
p310
sa(dp311
g74
S'C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py'
p312
sg76
(dp313
S'fields'
p314
S'[<pydal.objects.Field object>]'
p315
sS'self'
p316
S'<pydal.adapters.postgres.PostgreSQLAdapter object>'
p317
sS'attributes'
p318
S"{'cache': None, 'cacheable': True, 'distinct': None, 'groupby': None, 'left': None, 'orderby': <pydal.objects.Field object>}"
p319
sS'self._select_aux'
p320
S'<bound method PostgreSQLAdapter._select_aux of <pydal.adapters.postgres.PostgreSQLAdapter object>>'
p321
sS'sql'
p322
S"'SELECT  sede.zona FROM sede WHERE (sede.id IS NOT NULL) ORDER BY sede.zona;'"
p323
ssg82
I1296
sg83
(dp324
I1291
S'            return cache_model('
p325
sI1292
S'                key,'
p326
sI1293
S'                lambda self=self,args=args:self._select_aux(*args),'
p327
sI1294
S'                time_expire)'
p328
sI1295
S'        else:'
p329
sI1296
S'            return self._select_aux(sql,fields,attributes)'
p330
sI1297
S''
sI1298
S'    def iterselect(self, query, fields, attributes):'
p331
sI1299
S'        sql = self._select(query, fields, attributes)'
p332
sI1300
S"        cacheable = attributes.get('cacheable', False)"
p333
ssg95
S"(self=<pydal.adapters.postgres.PostgreSQLAdapter object>, query=<Query (sede.id IS NOT NULL)>, fields=[<pydal.objects.Field object>], attributes={'cache': None, 'cacheable': True, 'distinct': None, 'groupby': None, 'left': None, 'orderby': <pydal.objects.Field object>})"
p334
sg97
g310
sa(dp335
g74
S'C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py'
p336
sg76
(dp337
S'self'
p338
S'<pydal.adapters.postgres.PostgreSQLAdapter object>'
p339
sS'self.execute'
p340
S'<bound method PostgreSQLAdapter.execute of <pydal.adapters.postgres.PostgreSQLAdapter object>>'
p341
sS'sql'
p342
S"'SELECT  sede.zona FROM sede WHERE (sede.id IS NOT NULL) ORDER BY sede.zona;'"
p343
ssg82
I1253
sg83
(dp344
I1248
S''
sI1249
S'    def _select_aux(self, sql, fields, attributes):'
p345
sI1250
S'        args_get = attributes.get'
p346
sI1251
S"        cache = args_get('cache',None)"
p347
sI1252
S'        if not cache:'
p348
sI1253
S'            self.execute(sql)'
p349
sI1254
S'            rows = self._fetchall()'
p350
sI1255
S'        else:'
p351
sI1256
S'            if isinstance(cache, dict):'
p352
sI1257
S"                cache_model = cache['model']"
p353
ssg95
S"(self=<pydal.adapters.postgres.PostgreSQLAdapter object>, sql='SELECT  sede.zona FROM sede WHERE (sede.id IS NOT NULL) ORDER BY sede.zona;', fields=[<pydal.objects.Field object>], attributes={'cache': None, 'cacheable': True, 'distinct': None, 'groupby': None, 'left': None, 'orderby': <pydal.objects.Field object>})"
p354
sg97
S'_select_aux'
p355
sa(dp356
g74
S'C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\postgres.py'
p357
sg76
(dp358
S'a'
S"('SELECT  sede.zona FROM sede WHERE (sede.id IS NOT NULL) ORDER BY sede.zona;',)"
p359
sS'self'
p360
S'<pydal.adapters.postgres.PostgreSQLAdapter object>'
p361
sS'b'
g21
sS'BaseAdapter.execute'
p362
S'<unbound method BaseAdapter.execute>'
p363
sS'global BaseAdapter'
p364
S"<class 'pydal.adapters.base.BaseAdapter'>"
p365
ssg82
I362
sg83
(dp366
I357
S''
sI358
S'    def execute(self, *a, **b):'
p367
sI359
S'        if PY2 and self.driver_name == "pg8000":'
p368
sI360
S'            a = list(a)'
p369
sI361
S"            a[0] = a[0].decode('utf8')"
p370
sI362
S'        return BaseAdapter.execute(self, *a, **b)'
p371
sI363
S''
sI364
S''
sI365
S'class NewPostgreSQLAdapter(PostgreSQLAdapter):'
p372
sI366
S"    drivers = ('psycopg2','pg8000')"
p373
ssg95
S"(self=<pydal.adapters.postgres.PostgreSQLAdapter object>, *a=('SELECT  sede.zona FROM sede WHERE (sede.id IS NOT NULL) ORDER BY sede.zona;',), **b={})"
p374
sg97
S'execute'
p375
sa(dp376
g74
S'C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py'
p377
sg76
(dp378
S'a'
S"('SELECT  sede.zona FROM sede WHERE (sede.id IS NOT NULL) ORDER BY sede.zona;',)"
p379
sS'self'
p380
S'<pydal.adapters.postgres.PostgreSQLAdapter object>'
p381
sS'b'
g21
sS'self.log_execute'
p382
S'<bound method PostgreSQLAdapter.log_execute of <pydal.adapters.postgres.PostgreSQLAdapter object>>'
p383
ssg82
I1388
sg83
(dp384
I1383
S'        self.db._timings.append((command,time.time()-t0))'
p385
sI1384
S'        del self.db._timings[:-TIMINGSSIZE]'
p386
sI1385
S'        return ret'
p387
sI1386
S''
sI1387
S'    def execute(self, *a, **b):'
p388
sI1388
S'        return self.log_execute(*a, **b)'
p389
sI1389
S''
sI1390
S'    def execute_test_query(self):'
p390
sI1391
S'        return self.execute(self.test_query)'
p391
sI1392
S''
ssg95
S"(self=<pydal.adapters.postgres.PostgreSQLAdapter object>, *a=('SELECT  sede.zona FROM sede WHERE (sede.id IS NOT NULL) ORDER BY sede.zona;',), **b={})"
p392
sg97
g375
sa(dp393
g74
S'C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py'
p394
sg76
(dp395
S'a'
S"('SELECT  sede.zona FROM sede WHERE (sede.id IS NOT NULL) ORDER BY sede.zona;',)"
p396
sS'b'
g21
sS'self'
p397
S'<pydal.adapters.postgres.PostgreSQLAdapter object>'
p398
sS'ret'
p399
g116
sS'command'
p400
S"'SELECT  sede.zona FROM sede WHERE (sede.id IS NOT NULL) ORDER BY sede.zona;'"
p401
sS'self.get_cursor'
p402
S'<bound method PostgreSQLAdapter.get_cursor of <pydal.adapters.postgres.PostgreSQLAdapter object>>'
p403
sS').execute'
p404
g116
ssg82
I1382
sg83
(dp405
I1377
S'            command = self.filter_sql_command(command)'
p406
sI1378
S'        if self.db._debug:'
p407
sI1379
S"            self.db.logger.debug('SQL: %s' % command)"
p408
sI1380
S'        self.db._lastsql = command'
p409
sI1381
S'        t0 = time.time()'
p410
sI1382
S'        ret = self.get_cursor().execute(command, *a[1:], **b)'
p411
sI1383
S'        self.db._timings.append((command,time.time()-t0))'
p412
sI1384
S'        del self.db._timings[:-TIMINGSSIZE]'
p413
sI1385
S'        return ret'
p414
sI1386
S''
ssg95
S"(self=<pydal.adapters.postgres.PostgreSQLAdapter object>, *a=('SELECT  sede.zona FROM sede WHERE (sede.id IS NOT NULL) ORDER BY sede.zona;',), **b={})"
p415
sg97
S'log_execute'
p416
sasS'pyver'
p417
S'Python 2.7.9: C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py\\web2py.exe (prefix: )'
p418
sS'session'
p419
g69
(S'sq\t\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">auth</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">expiration</td><td style="vertical-align:top;">:</td><td><div>3600</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">hmac_key</td><td style="vertical-align:top;">:</td><td><div>b9c5395a-3773-4aca-9458-685e3a6fe6f9</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_visit</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2017, 11, 4, 13, 42, 54, 166000)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remember_me</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">user</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">email</td><td style="vertical-align:top;">:</td><td><div>admin@usb.ve</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">first_name</td><td style="vertical-align:top;">:</td><td><div>SisPIO</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">id</td><td style="vertical-align:top;">:</td><td><div>1L</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_name</td><td style="vertical-align:top;">:</td><td><div>Admin</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">registration_id</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">registration_key</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">reset_password_key</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">username</td><td style="vertical-align:top;">:</td><td><div>admin</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">user_groups</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">5</td><td style="vertical-align:top;">:</td><td><div>Administrador</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr></table></div>'
tRp420
sS'etype'
p421
S"<class 'psycopg2.ProgrammingError'>"
p422
sS'date'
p423
S'Sat Nov 04 13:42:54 2017'
p424
sS'response'
p425
g69
(S's\x85?\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">body</td><td style="vertical-align:top;">:</td><td><div>&lt;cStringIO.StringO object at 0x039AFD00&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_sispio</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-b820ca00-0ccc-4fd8-a905-b3947eafd3d1<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">delimiters</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">files</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">form_label_separator</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">formstyle</td><td style="vertical-align:top;">:</td><td><div>bootstrap3_inline</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generic_patterns</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>*</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">google_analytics_id</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">headers</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">X-Powered-By</td><td style="vertical-align:top;">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">logo</td><td style="vertical-align:top;">:</td><td><div><a class="navbar-brand" href="http://www.web2py.com/" id="web2py-logo"><b>web<span>2</span>py</b>&trade;&nbsp;</a></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">menu</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div><table><tr><td><div>Home</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/SisPIO/default/index</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>My Sites</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/site</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>This App</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>#</div></td></tr><tr><td><div><table><tr><td><div><table><tr><td><div>Design</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/design/SisPIO</div></td></tr></table></div></td></tr><tr><td><div><li class="divider"></li></div></td></tr><tr><td><div><table><tr><td><div>Controller</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/edit/SisPIO/controllers/default.py</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>View</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/edit/SisPIO/views/default/admin.html</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>DB Model</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/edit/SisPIO/models/db.py</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Menu Model</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/edit/SisPIO/models/menu.py</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Config.ini</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/edit/SisPIO/private/appconfig.ini</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Layout</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/edit/SisPIO/views/layout.html</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Stylesheet</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/edit/SisPIO/static/css/web2py-bootstrap3.css</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Database</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/SisPIO/appadmin/index</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Errors</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/errors/SisPIO</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>About</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/admin/default/about/SisPIO</div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>web2py.com</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>#</div></td></tr><tr><td><div><table><tr><td><div><table><tr><td><div>Download</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/examples/default/download</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Support</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/examples/default/support</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Demo</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://web2py.com/demo_admin</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Quick Examples</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://web2py.com/examples/default/examples</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>FAQ</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://web2py.com/AlterEgo</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Videos</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/examples/default/videos/</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Free Applications</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://web2py.com/appliances</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Plugins</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://web2py.com/plugins</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Recipes</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://web2pyslices.com/</div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Documentation</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>#</div></td></tr><tr><td><div><table><tr><td><div><table><tr><td><div>Online book</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book</div></td></tr></table></div></td></tr><tr><td><div><li class="divider"></li></div></td></tr><tr><td><div><table><tr><td><div>Preface</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/00</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Introduction</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/01</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Python</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/02</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Overview</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/03</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>The Core</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/04</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>The Views</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/05</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Database</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/06</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Forms and Validators</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/07</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Email and SMS</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/08</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Access Control</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/09</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Services</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/10</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Ajax Recipes</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/11</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Components and Plugins</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/12</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Deployment Recipes</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/13</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Other Recipes</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/14</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Helping web2py</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/book/default/chapter/15</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Buy web2py\'s book</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://stores.lulu.com/web2py</div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Community</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>None</div></td></tr><tr><td><div><table><tr><td><div><table><tr><td><div>Groups</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://www.web2py.com/examples/default/usergroups</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Twitter</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://twitter.com/web2py</div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div>Live Chat</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>http://webchat.freenode.net/?channels=web2py</div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">meta</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">author</td><td style="vertical-align:top;">:</td><td><div>Your Name &lt;you@example.com&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">description</td><td style="vertical-align:top;">:</td><td><div>a cool new app</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generator</td><td style="vertical-align:top;">:</td><td><div>Web2py Web Framework</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">keywords</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>web2py</div></td></tr><tr><td><div>python</div></td></tr><tr><td><div>framework</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">models_to_run</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^default/\\w+\\.py$</div></td></tr><tr><td><div>^default/admin/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">postprocessing</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_compression_level</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_expires</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_data_name</td><td style="vertical-align:top;">:</td><td><div>session_data_sispio</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_file</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;C:\\\\Users\\\\capf9\\\\Desktop\\\\University\\\\web2py_win\\\\web2py\\\\applications\\\\SisPIO\\\\sessions\\\\088\\\\1eb\\\\127.0.0.1-b820ca00-0ccc-4fd8-a905-b3947eafd3d1&#x27;, mode &#x27;rb+&#x27; at 0x02F2D230&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_filename</td><td style="vertical-align:top;">:</td><td><div>C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py\\applications\\SisPIO\\sessions\\127.0.0.1-b820ca00-0ccc-4fd8-a905-b3947eafd3d1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_hash</td><td style="vertical-align:top;">:</td><td><div>63793a8b415a8ac75c599af46c7284b0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-b820ca00-0ccc-4fd8-a905-b3947eafd3d1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_name</td><td style="vertical-align:top;">:</td><td><div>session_id_sispio</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_locked</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_masterapp</td><td style="vertical-align:top;">:</td><td><div>SisPIO</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_new</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_storage_type</td><td style="vertical-align:top;">:</td><td><div>file</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">status</td><td style="vertical-align:top;">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">subtitle</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">title</td><td style="vertical-align:top;">:</td><td><div>Sispio</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">view</td><td style="vertical-align:top;">:</td><td><div>default/admin.html</div></td></tr></table></div>'
tRp426
sS'locals'
p427
(dp428
S'a'
S"('SELECT  sede.zona FROM sede WHERE (sede.id IS NOT NULL) ORDER BY sede.zona;',)"
p429
sS'self'
p430
S'<pydal.adapters.postgres.PostgreSQLAdapter object>'
p431
sS'b'
g21
sS'command'
p432
S"'SELECT  sede.zona FROM sede WHERE (sede.id IS NOT NULL) ORDER BY sede.zona;'"
p433
sS't0'
p434
S'1509817374.446'
p435
sssS'traceback'
p436
S'Traceback (most recent call last):\n  File "C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py\\gluon\\restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py\\applications\\SisPIO\\controllers/default.py", line 1018, in <module>\n  File "C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py\\gluon\\globals.py", line 417, in <lambda>\n    self._caller = lambda f: f()\n  File "C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py\\gluon\\tools.py", line 4241, in f\n    return action(*a, **b)\n  File "C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py\\gluon\\tools.py", line 4241, in f\n    return action(*a, **b)\n  File "C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py\\applications\\SisPIO\\controllers/default.py", line 554, in admin\n    formularioLiceoManual = SQLFORM(db.liceo)\n  File "C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py\\gluon\\sqlhtml.py", line 1295, in __init__\n    inp = self.widgets.options.widget(field, default)\n  File "C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py\\gluon\\sqlhtml.py", line 313, in widget\n    options = requires[0].options()\n  File "C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py\\gluon\\validators.py", line 598, in options\n    self.build_set()\n  File "C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py\\gluon\\validators.py", line 584, in build_set\n    records = self.dbset(table).select(*fields, **dd)\n  File "C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py\\gluon\\packages\\dal\\pydal\\objects.py", line 2020, in select\n    return adapter.select(self.query, fields, attributes)\n  File "C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 1296, in select\n    return self._select_aux(sql,fields,attributes)\n  File "C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 1253, in _select_aux\n    self.execute(sql)\n  File "C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\postgres.py", line 362, in execute\n    return BaseAdapter.execute(self, *a, **b)\n  File "C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 1388, in execute\n    return self.log_execute(*a, **b)\n  File "C:\\Users\\capf9\\Desktop\\University\\web2py_win\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 1382, in log_execute\n    ret = self.get_cursor().execute(command, *a[1:], **b)\nProgrammingError: relation "sede" does not exist\nLINE 1: SELECT  sede.zona FROM sede WHERE (sede.id IS NOT NULL) ORDE...\n                               ^\n\n'
p437
s.